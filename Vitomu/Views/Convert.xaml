<UserControl x:Class="Vitomu.Views.Convert"
             x:Name="ConvertControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Focusable="True"
             Loaded="ConvertControl_Loaded"
             DataContext="{Binding Convert, Source={StaticResource Locator}}">

    <UserControl.InputBindings>
        <KeyBinding Modifiers="Control" 
                Key="v" 
                Command="{Binding PasteCommand}"/>
    </UserControl.InputBindings>

    <UserControl.Resources>
        <Style x:Key="RoundButton" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Height="30" Width="30" CornerRadius="15" Background="{DynamicResource Brush_Grey}">
                            <Label Padding="0" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity"  Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity"  Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="EnlargeSize">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="Width" BeginTime="0:0:0" To="50" Duration="0:0:0.15" />
                <DoubleAnimation Storyboard.TargetProperty="Height" BeginTime="0:0:0" To="50" Duration="0:0:0.05" />
            </Storyboard>
        </Storyboard>
        <Storyboard x:Key="ReduceSize">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="Width" BeginTime="0:0:0" To="40" Duration="0:0:0.15" />
                <DoubleAnimation Storyboard.TargetProperty="Height" BeginTime="0:0:0" To="40" Duration="0:0:0.05" />
            </Storyboard>
        </Storyboard>
        <Storyboard x:Key="IncreaseOpacity">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" To="1.0" Duration="0:0:0.25" />
                <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" To="1.0" Duration="0:0:0.15" />
            </Storyboard>
        </Storyboard>
        <Storyboard x:Key="DecreaseOpacity">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" To="0.5" Duration="0:0:0.25" />
                <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" To="0.5" Duration="0:0:0.15" />
            </Storyboard>
        </Storyboard>
    </UserControl.Resources>

    <DockPanel>
        <Border Margin="10" DockPanel.Dock="Bottom" Height="30" Visibility="{Binding CanViewConvertedFile,Converter={StaticResource BooleanToVisibilityConverter}}">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" >
                    <Button x:Name="ViewInFolderButton" ToolTip="{DynamicResource Language_ViewInFolder}" Style="{StaticResource RoundButton}" Width="30" Height="30" Command="{Binding ViewInFolderCommand}">
                        <TextBlock FontFamily="{StaticResource MaterialIcons}" FontSize="18" Text="&#xE2C7;" Foreground="{DynamicResource Brush_LightGrey}"/>
                    </Button>
                    <Button x:Name="PlayButton" ToolTip="{DynamicResource Language_Play}" Style="{StaticResource RoundButton}" Margin="10,0,0,0" Width="30" Height="30" Command="{Binding PlayCommand}">
                        <TextBlock FontFamily="{StaticResource MaterialIcons}" FontSize="22" Text="&#xE037;" Foreground="{DynamicResource Brush_LightGrey}"/>
                    </Button>
                </StackPanel>
                <TextBlock VerticalAlignment="Center" Text="{Binding ConvertedFileName}" ToolTip="{Binding ConvertedFileName}" Foreground="{DynamicResource Brush_LightGrey}" FontSize="13" TextTrimming="CharacterEllipsis"/>
            </DockPanel>
        </Border>
        <DockPanel Margin="30,80,30,30">
            <TextBlock Text="{Binding ProgressInformation}" 
                       DockPanel.Dock="Bottom"
                       Margin="0,10,0,0"
                       FontSize="26" 
                       HorizontalAlignment="Center"
                       Foreground="{DynamicResource Brush_LightGrey}" />
            <Viewbox>
                <Grid dd:DragDrop.IsDropTarget="True" 
                      dd:DragDrop.DropHandler="{Binding}"
                      dd:DragDrop.UseDefaultDragAdorner="False"
                      Opacity="0.5">
                    <Grid.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsDraggingValidVideo}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource IncreaseOpacity}"/>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource DecreaseOpacity}"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Ellipse 
                        Fill="{DynamicResource Brush_Grey}" 
                        Width="100" 
                        Height="100">
                    </Ellipse>
                    <Viewbox Width="40" Height="40" Visibility="{Binding ConvertState,Converter={StaticResource ConvertStateIdleToVisibilityConverter}}">
                        <Viewbox.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDraggingValidVideo}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource EnlargeSize}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource ReduceSize}"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Viewbox.Style>
                        <TextBlock Text="&#xE04B;" FontFamily="{StaticResource MaterialIcons}" Foreground="{DynamicResource Brush_LightGrey}"/>
                    </Viewbox>
                    <Viewbox Width="50" Height="50" Visibility="{Binding ConvertState,Converter={StaticResource ConvertStateSuccessToVisibilityConverter}}">
                        <TextBlock Text="&#xE5CA;" FontFamily="{StaticResource MaterialIcons}" Foreground="{DynamicResource Brush_LightGrey}"/>
                    </Viewbox>
                    <Viewbox Width="40" Height="40" Visibility="{Binding ConvertState,Converter={StaticResource ConvertStateFailedToVisibilityConverter}}">
                        <Path Data="{StaticResource SadIcon}" Fill="{DynamicResource Brush_LightGrey}"/>
                    </Viewbox>
                    <Viewbox Width="60" Height="60" RenderTransformOrigin="0.5, 0.5" Visibility="{Binding ConvertState,Converter={StaticResource ConvertStateBusyToVisibilityConverter}}">
                        <TextBlock Text="&#xE627;" FontFamily="{StaticResource MaterialIcons}" Foreground="{DynamicResource Brush_LightGrey}"/>
                        <Viewbox.RenderTransform>
                            <!-- Giving the transform a name tells the framework not to freeze it -->
                            <RotateTransform x:Name="noFreeze" />
                        </Viewbox.RenderTransform>
                        <Viewbox.Style>
                            <Style TargetType="{x:Type Viewbox}">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                    Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                    To="360" Duration="0:0:1" RepeatBehavior="Forever" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Viewbox.Style>
                    </Viewbox>
                </Grid>
            </Viewbox>
        </DockPanel>
    </DockPanel>
</UserControl>
